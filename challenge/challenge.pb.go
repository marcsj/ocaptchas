// Code generated by protoc-gen-go. DO NOT EDIT.
// source: challenge.proto

package challenge

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetImagesRequest struct {
	Number               uint32   `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	Label                string   `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetImagesRequest) Reset()         { *m = GetImagesRequest{} }
func (m *GetImagesRequest) String() string { return proto.CompactTextString(m) }
func (*GetImagesRequest) ProtoMessage()    {}
func (*GetImagesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4819ccc01c0c0a11, []int{0}
}

func (m *GetImagesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetImagesRequest.Unmarshal(m, b)
}
func (m *GetImagesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetImagesRequest.Marshal(b, m, deterministic)
}
func (m *GetImagesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetImagesRequest.Merge(m, src)
}
func (m *GetImagesRequest) XXX_Size() int {
	return xxx_messageInfo_GetImagesRequest.Size(m)
}
func (m *GetImagesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetImagesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetImagesRequest proto.InternalMessageInfo

func (m *GetImagesRequest) GetNumber() uint32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *GetImagesRequest) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

type GetImagesResponse struct {
	SessionId            string       `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Prompt               string       `protobuf:"bytes,2,opt,name=prompt,proto3" json:"prompt,omitempty"`
	Images               []*ImageData `protobuf:"bytes,3,rep,name=images,proto3" json:"images,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetImagesResponse) Reset()         { *m = GetImagesResponse{} }
func (m *GetImagesResponse) String() string { return proto.CompactTextString(m) }
func (*GetImagesResponse) ProtoMessage()    {}
func (*GetImagesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4819ccc01c0c0a11, []int{1}
}

func (m *GetImagesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetImagesResponse.Unmarshal(m, b)
}
func (m *GetImagesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetImagesResponse.Marshal(b, m, deterministic)
}
func (m *GetImagesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetImagesResponse.Merge(m, src)
}
func (m *GetImagesResponse) XXX_Size() int {
	return xxx_messageInfo_GetImagesResponse.Size(m)
}
func (m *GetImagesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetImagesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetImagesResponse proto.InternalMessageInfo

func (m *GetImagesResponse) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *GetImagesResponse) GetPrompt() string {
	if m != nil {
		return m.Prompt
	}
	return ""
}

func (m *GetImagesResponse) GetImages() []*ImageData {
	if m != nil {
		return m.Images
	}
	return nil
}

type GetAlphanumericRequest struct {
	Length               uint32   `protobuf:"varint,1,opt,name=length,proto3" json:"length,omitempty"`
	Size                 uint32   `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAlphanumericRequest) Reset()         { *m = GetAlphanumericRequest{} }
func (m *GetAlphanumericRequest) String() string { return proto.CompactTextString(m) }
func (*GetAlphanumericRequest) ProtoMessage()    {}
func (*GetAlphanumericRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4819ccc01c0c0a11, []int{2}
}

func (m *GetAlphanumericRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAlphanumericRequest.Unmarshal(m, b)
}
func (m *GetAlphanumericRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAlphanumericRequest.Marshal(b, m, deterministic)
}
func (m *GetAlphanumericRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAlphanumericRequest.Merge(m, src)
}
func (m *GetAlphanumericRequest) XXX_Size() int {
	return xxx_messageInfo_GetAlphanumericRequest.Size(m)
}
func (m *GetAlphanumericRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAlphanumericRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAlphanumericRequest proto.InternalMessageInfo

func (m *GetAlphanumericRequest) GetLength() uint32 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *GetAlphanumericRequest) GetSize() uint32 {
	if m != nil {
		return m.Size
	}
	return 0
}

type GetAlphanumericResponse struct {
	SessionId            string     `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Prompt               string     `protobuf:"bytes,2,opt,name=prompt,proto3" json:"prompt,omitempty"`
	Image                *ImageData `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetAlphanumericResponse) Reset()         { *m = GetAlphanumericResponse{} }
func (m *GetAlphanumericResponse) String() string { return proto.CompactTextString(m) }
func (*GetAlphanumericResponse) ProtoMessage()    {}
func (*GetAlphanumericResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4819ccc01c0c0a11, []int{3}
}

func (m *GetAlphanumericResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAlphanumericResponse.Unmarshal(m, b)
}
func (m *GetAlphanumericResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAlphanumericResponse.Marshal(b, m, deterministic)
}
func (m *GetAlphanumericResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAlphanumericResponse.Merge(m, src)
}
func (m *GetAlphanumericResponse) XXX_Size() int {
	return xxx_messageInfo_GetAlphanumericResponse.Size(m)
}
func (m *GetAlphanumericResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAlphanumericResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAlphanumericResponse proto.InternalMessageInfo

func (m *GetAlphanumericResponse) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *GetAlphanumericResponse) GetPrompt() string {
	if m != nil {
		return m.Prompt
	}
	return ""
}

func (m *GetAlphanumericResponse) GetImage() *ImageData {
	if m != nil {
		return m.Image
	}
	return nil
}

type GetQuestionsRequest struct {
	Number               uint32   `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	Label                string   `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetQuestionsRequest) Reset()         { *m = GetQuestionsRequest{} }
func (m *GetQuestionsRequest) String() string { return proto.CompactTextString(m) }
func (*GetQuestionsRequest) ProtoMessage()    {}
func (*GetQuestionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4819ccc01c0c0a11, []int{4}
}

func (m *GetQuestionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetQuestionsRequest.Unmarshal(m, b)
}
func (m *GetQuestionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetQuestionsRequest.Marshal(b, m, deterministic)
}
func (m *GetQuestionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetQuestionsRequest.Merge(m, src)
}
func (m *GetQuestionsRequest) XXX_Size() int {
	return xxx_messageInfo_GetQuestionsRequest.Size(m)
}
func (m *GetQuestionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetQuestionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetQuestionsRequest proto.InternalMessageInfo

func (m *GetQuestionsRequest) GetNumber() uint32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *GetQuestionsRequest) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

type GetQuestionsResponse struct {
	SessionId            string   `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Questions            []string `protobuf:"bytes,2,rep,name=questions,proto3" json:"questions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetQuestionsResponse) Reset()         { *m = GetQuestionsResponse{} }
func (m *GetQuestionsResponse) String() string { return proto.CompactTextString(m) }
func (*GetQuestionsResponse) ProtoMessage()    {}
func (*GetQuestionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4819ccc01c0c0a11, []int{5}
}

func (m *GetQuestionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetQuestionsResponse.Unmarshal(m, b)
}
func (m *GetQuestionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetQuestionsResponse.Marshal(b, m, deterministic)
}
func (m *GetQuestionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetQuestionsResponse.Merge(m, src)
}
func (m *GetQuestionsResponse) XXX_Size() int {
	return xxx_messageInfo_GetQuestionsResponse.Size(m)
}
func (m *GetQuestionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetQuestionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetQuestionsResponse proto.InternalMessageInfo

func (m *GetQuestionsResponse) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *GetQuestionsResponse) GetQuestions() []string {
	if m != nil {
		return m.Questions
	}
	return nil
}

type SessionSolution struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Answer               []string `protobuf:"bytes,2,rep,name=answer,proto3" json:"answer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionSolution) Reset()         { *m = SessionSolution{} }
func (m *SessionSolution) String() string { return proto.CompactTextString(m) }
func (*SessionSolution) ProtoMessage()    {}
func (*SessionSolution) Descriptor() ([]byte, []int) {
	return fileDescriptor_4819ccc01c0c0a11, []int{6}
}

func (m *SessionSolution) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionSolution.Unmarshal(m, b)
}
func (m *SessionSolution) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionSolution.Marshal(b, m, deterministic)
}
func (m *SessionSolution) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionSolution.Merge(m, src)
}
func (m *SessionSolution) XXX_Size() int {
	return xxx_messageInfo_SessionSolution.Size(m)
}
func (m *SessionSolution) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionSolution.DiscardUnknown(m)
}

var xxx_messageInfo_SessionSolution proto.InternalMessageInfo

func (m *SessionSolution) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *SessionSolution) GetAnswer() []string {
	if m != nil {
		return m.Answer
	}
	return nil
}

type ImageData struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageData) Reset()         { *m = ImageData{} }
func (m *ImageData) String() string { return proto.CompactTextString(m) }
func (*ImageData) ProtoMessage()    {}
func (*ImageData) Descriptor() ([]byte, []int) {
	return fileDescriptor_4819ccc01c0c0a11, []int{7}
}

func (m *ImageData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageData.Unmarshal(m, b)
}
func (m *ImageData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageData.Marshal(b, m, deterministic)
}
func (m *ImageData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageData.Merge(m, src)
}
func (m *ImageData) XXX_Size() int {
	return xxx_messageInfo_ImageData.Size(m)
}
func (m *ImageData) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageData.DiscardUnknown(m)
}

var xxx_messageInfo_ImageData proto.InternalMessageInfo

func (m *ImageData) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ImageData) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type SolutionResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SolutionResponse) Reset()         { *m = SolutionResponse{} }
func (m *SolutionResponse) String() string { return proto.CompactTextString(m) }
func (*SolutionResponse) ProtoMessage()    {}
func (*SolutionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4819ccc01c0c0a11, []int{8}
}

func (m *SolutionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SolutionResponse.Unmarshal(m, b)
}
func (m *SolutionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SolutionResponse.Marshal(b, m, deterministic)
}
func (m *SolutionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SolutionResponse.Merge(m, src)
}
func (m *SolutionResponse) XXX_Size() int {
	return xxx_messageInfo_SolutionResponse.Size(m)
}
func (m *SolutionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SolutionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SolutionResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*GetImagesRequest)(nil), "challenge.GetImagesRequest")
	proto.RegisterType((*GetImagesResponse)(nil), "challenge.GetImagesResponse")
	proto.RegisterType((*GetAlphanumericRequest)(nil), "challenge.GetAlphanumericRequest")
	proto.RegisterType((*GetAlphanumericResponse)(nil), "challenge.GetAlphanumericResponse")
	proto.RegisterType((*GetQuestionsRequest)(nil), "challenge.GetQuestionsRequest")
	proto.RegisterType((*GetQuestionsResponse)(nil), "challenge.GetQuestionsResponse")
	proto.RegisterType((*SessionSolution)(nil), "challenge.SessionSolution")
	proto.RegisterType((*ImageData)(nil), "challenge.ImageData")
	proto.RegisterType((*SolutionResponse)(nil), "challenge.SolutionResponse")
}

func init() {
	proto.RegisterFile("challenge.proto", fileDescriptor_4819ccc01c0c0a11)
}

var fileDescriptor_4819ccc01c0c0a11 = []byte{
	// 501 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x96, 0x13, 0x1a, 0xc9, 0xd3, 0x56, 0x6d, 0xb6, 0x21, 0x75, 0x4d, 0xa0, 0x66, 0x4f, 0x51,
	0x85, 0x6a, 0xa9, 0xbd, 0x21, 0x21, 0x81, 0x5a, 0x29, 0xea, 0x11, 0xe7, 0xc6, 0x05, 0x6d, 0x9a,
	0x51, 0x62, 0xe4, 0xec, 0xba, 0xde, 0x75, 0xf9, 0x11, 0xa7, 0xbe, 0x02, 0x2f, 0x86, 0xc4, 0x2b,
	0xf0, 0x20, 0x68, 0xd7, 0x6b, 0x67, 0x63, 0x5a, 0x84, 0xe0, 0xb6, 0x33, 0x9e, 0xf9, 0xbe, 0xf9,
	0x66, 0x3e, 0x19, 0xf6, 0xae, 0x97, 0x2c, 0xcb, 0x90, 0x2f, 0xf0, 0x34, 0x2f, 0x84, 0x12, 0xc4,
	0x6f, 0x12, 0xe1, 0x68, 0x21, 0xc4, 0x22, 0xc3, 0x98, 0xe5, 0x69, 0xcc, 0x38, 0x17, 0x8a, 0xa9,
	0x54, 0x70, 0x59, 0x15, 0xd2, 0xd7, 0xb0, 0x3f, 0x41, 0x75, 0xb5, 0x62, 0x0b, 0x94, 0x09, 0xde,
	0x94, 0x28, 0x15, 0x19, 0x42, 0x8f, 0x97, 0xab, 0x19, 0x16, 0x81, 0x17, 0x79, 0xe3, 0xdd, 0xc4,
	0x46, 0x64, 0x00, 0x5b, 0x19, 0x9b, 0x61, 0x16, 0x74, 0x22, 0x6f, 0xec, 0x27, 0x55, 0x40, 0x3f,
	0x41, 0xdf, 0x41, 0x90, 0xb9, 0xe0, 0x12, 0xc9, 0x53, 0x00, 0x89, 0x52, 0xa6, 0x82, 0xbf, 0x4f,
	0xe7, 0x06, 0xc6, 0x4f, 0x7c, 0x9b, 0xb9, 0x9a, 0x6b, 0x86, 0xbc, 0x10, 0xab, 0x5c, 0x59, 0x28,
	0x1b, 0x91, 0x17, 0xd0, 0x4b, 0x0d, 0x50, 0xd0, 0x8d, 0xba, 0xe3, 0xed, 0xb3, 0xc1, 0xe9, 0x5a,
	0x98, 0x61, 0xb8, 0x64, 0x8a, 0x25, 0xb6, 0x86, 0x5e, 0xc2, 0x70, 0x82, 0xea, 0x4d, 0x96, 0x2f,
	0x19, 0x2f, 0x57, 0x58, 0xa4, 0xd7, 0x8e, 0x02, 0xdd, 0xa4, 0x96, 0xb5, 0x82, 0x2a, 0x22, 0x04,
	0x1e, 0xc9, 0xf4, 0x0b, 0x1a, 0xd6, 0xdd, 0xc4, 0xbc, 0xe9, 0x57, 0x38, 0xfc, 0x0d, 0xe5, 0xff,
	0x54, 0x9c, 0xc0, 0x96, 0x99, 0x30, 0xe8, 0x46, 0xde, 0x83, 0x22, 0xaa, 0x12, 0x7a, 0x01, 0x07,
	0x13, 0x54, 0x6f, 0xf5, 0xd4, 0xfa, 0x2a, 0xff, 0x76, 0x82, 0x29, 0x0c, 0x36, 0x41, 0xfe, 0x6e,
	0xfe, 0x11, 0xf8, 0x37, 0x75, 0x4f, 0xd0, 0x89, 0xba, 0xfa, 0x6b, 0x93, 0xa0, 0xaf, 0x60, 0x6f,
	0x5a, 0x95, 0x4e, 0x45, 0x56, 0xea, 0x9c, 0x5e, 0x5f, 0x59, 0x36, 0x48, 0xe6, 0xad, 0x27, 0x65,
	0x5c, 0x7e, 0xc4, 0xc2, 0x22, 0xd8, 0x88, 0x9e, 0x83, 0xdf, 0x88, 0xd5, 0x8d, 0xea, 0x73, 0x8e,
	0x75, 0xa3, 0x7e, 0xeb, 0xdc, 0x9c, 0x29, 0x66, 0x94, 0xec, 0x24, 0xe6, 0x4d, 0x09, 0xec, 0xd7,
	0x64, 0xb5, 0x88, 0xb3, 0xef, 0x5d, 0xf0, 0x2f, 0xea, 0x05, 0x92, 0x0f, 0x40, 0x1a, 0xb7, 0xad,
	0xb3, 0x4f, 0x9c, 0x15, 0xb7, 0xed, 0x1c, 0x8e, 0xee, 0xff, 0x58, 0xc1, 0xd3, 0xa3, 0xbb, 0x1f,
	0x3f, 0xbf, 0x75, 0x0e, 0x48, 0x3f, 0x6e, 0xaa, 0xe2, 0xca, 0x5f, 0xe4, 0xce, 0x83, 0xa0, 0x65,
	0x8d, 0x35, 0xe5, 0xf3, 0x4d, 0xd4, 0x7b, 0x5c, 0x18, 0xd2, 0x3f, 0x95, 0x58, 0xfa, 0x63, 0x43,
	0x7f, 0x44, 0x0e, 0x1d, 0x7a, 0xe6, 0x14, 0x92, 0x5b, 0x78, 0xec, 0xde, 0x76, 0x3d, 0xc0, 0xb3,
	0x4d, 0xf4, 0xb6, 0x85, 0xc2, 0xe3, 0x07, 0xbf, 0x5b, 0xea, 0x91, 0xa1, 0x1e, 0x92, 0x81, 0x43,
	0xdd, 0x9c, 0x9f, 0xbc, 0x83, 0x9d, 0xa9, 0xc8, 0x6e, 0xd1, 0x7a, 0x80, 0x84, 0x0e, 0x5c, 0xcb,
	0x17, 0xa1, 0xbb, 0xfe, 0xf6, 0xfd, 0x68, 0xdf, 0xd0, 0x6c, 0xd3, 0x5e, 0x2c, 0x35, 0xde, 0x4b,
	0xef, 0x64, 0xd6, 0x33, 0xff, 0x9e, 0xf3, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xe0, 0xd9, 0xb2,
	0xaa, 0xb7, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ChallengeClient is the client API for Challenge service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChallengeClient interface {
	// Get an image challenge
	//
	// Returns a list of images and a prompt that lets the client know which images we are asking for.
	GetImagesChallenge(ctx context.Context, in *GetImagesRequest, opts ...grpc.CallOption) (*GetImagesResponse, error)
	// Get an alphanumeric challenge
	//
	// Returns an image with alphanumeric characters to be found, and a prompt if applicable
	GetAlphanumericChallenge(ctx context.Context, in *GetAlphanumericRequest, opts ...grpc.CallOption) (*GetAlphanumericResponse, error)
	// Get a questions list challenge
	//
	// Returns a list of questions that are to be answered by the client.
	GetQuestionsChallenge(ctx context.Context, in *GetQuestionsRequest, opts ...grpc.CallOption) (*GetQuestionsResponse, error)
	// Solve the session
	//
	// Returns an error on failure.
	SolveSession(ctx context.Context, in *SessionSolution, opts ...grpc.CallOption) (*SolutionResponse, error)
}

type challengeClient struct {
	cc grpc.ClientConnInterface
}

func NewChallengeClient(cc grpc.ClientConnInterface) ChallengeClient {
	return &challengeClient{cc}
}

func (c *challengeClient) GetImagesChallenge(ctx context.Context, in *GetImagesRequest, opts ...grpc.CallOption) (*GetImagesResponse, error) {
	out := new(GetImagesResponse)
	err := c.cc.Invoke(ctx, "/challenge.Challenge/GetImagesChallenge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *challengeClient) GetAlphanumericChallenge(ctx context.Context, in *GetAlphanumericRequest, opts ...grpc.CallOption) (*GetAlphanumericResponse, error) {
	out := new(GetAlphanumericResponse)
	err := c.cc.Invoke(ctx, "/challenge.Challenge/GetAlphanumericChallenge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *challengeClient) GetQuestionsChallenge(ctx context.Context, in *GetQuestionsRequest, opts ...grpc.CallOption) (*GetQuestionsResponse, error) {
	out := new(GetQuestionsResponse)
	err := c.cc.Invoke(ctx, "/challenge.Challenge/GetQuestionsChallenge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *challengeClient) SolveSession(ctx context.Context, in *SessionSolution, opts ...grpc.CallOption) (*SolutionResponse, error) {
	out := new(SolutionResponse)
	err := c.cc.Invoke(ctx, "/challenge.Challenge/SolveSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChallengeServer is the server API for Challenge service.
type ChallengeServer interface {
	// Get an image challenge
	//
	// Returns a list of images and a prompt that lets the client know which images we are asking for.
	GetImagesChallenge(context.Context, *GetImagesRequest) (*GetImagesResponse, error)
	// Get an alphanumeric challenge
	//
	// Returns an image with alphanumeric characters to be found, and a prompt if applicable
	GetAlphanumericChallenge(context.Context, *GetAlphanumericRequest) (*GetAlphanumericResponse, error)
	// Get a questions list challenge
	//
	// Returns a list of questions that are to be answered by the client.
	GetQuestionsChallenge(context.Context, *GetQuestionsRequest) (*GetQuestionsResponse, error)
	// Solve the session
	//
	// Returns an error on failure.
	SolveSession(context.Context, *SessionSolution) (*SolutionResponse, error)
}

// UnimplementedChallengeServer can be embedded to have forward compatible implementations.
type UnimplementedChallengeServer struct {
}

func (*UnimplementedChallengeServer) GetImagesChallenge(ctx context.Context, req *GetImagesRequest) (*GetImagesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetImagesChallenge not implemented")
}
func (*UnimplementedChallengeServer) GetAlphanumericChallenge(ctx context.Context, req *GetAlphanumericRequest) (*GetAlphanumericResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAlphanumericChallenge not implemented")
}
func (*UnimplementedChallengeServer) GetQuestionsChallenge(ctx context.Context, req *GetQuestionsRequest) (*GetQuestionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetQuestionsChallenge not implemented")
}
func (*UnimplementedChallengeServer) SolveSession(ctx context.Context, req *SessionSolution) (*SolutionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SolveSession not implemented")
}

func RegisterChallengeServer(s *grpc.Server, srv ChallengeServer) {
	s.RegisterService(&_Challenge_serviceDesc, srv)
}

func _Challenge_GetImagesChallenge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetImagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChallengeServer).GetImagesChallenge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/challenge.Challenge/GetImagesChallenge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChallengeServer).GetImagesChallenge(ctx, req.(*GetImagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Challenge_GetAlphanumericChallenge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAlphanumericRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChallengeServer).GetAlphanumericChallenge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/challenge.Challenge/GetAlphanumericChallenge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChallengeServer).GetAlphanumericChallenge(ctx, req.(*GetAlphanumericRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Challenge_GetQuestionsChallenge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetQuestionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChallengeServer).GetQuestionsChallenge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/challenge.Challenge/GetQuestionsChallenge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChallengeServer).GetQuestionsChallenge(ctx, req.(*GetQuestionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Challenge_SolveSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionSolution)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChallengeServer).SolveSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/challenge.Challenge/SolveSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChallengeServer).SolveSession(ctx, req.(*SessionSolution))
	}
	return interceptor(ctx, in, info, handler)
}

var _Challenge_serviceDesc = grpc.ServiceDesc{
	ServiceName: "challenge.Challenge",
	HandlerType: (*ChallengeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetImagesChallenge",
			Handler:    _Challenge_GetImagesChallenge_Handler,
		},
		{
			MethodName: "GetAlphanumericChallenge",
			Handler:    _Challenge_GetAlphanumericChallenge_Handler,
		},
		{
			MethodName: "GetQuestionsChallenge",
			Handler:    _Challenge_GetQuestionsChallenge_Handler,
		},
		{
			MethodName: "SolveSession",
			Handler:    _Challenge_SolveSession_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "challenge.proto",
}
